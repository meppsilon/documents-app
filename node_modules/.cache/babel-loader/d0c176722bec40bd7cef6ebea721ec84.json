{"ast":null,"code":"import _slicedToArray from \"/Users/mepps32/kraken-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mepps32/kraken-app/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { SearchInput, UploadButton, DocumentCard } from './components';\n\nconst formatBytes = (bytes, decimals = 2) => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['bytes', 'kb', 'mb'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + sizes[i];\n};\n\nconst tenMbs = 10 * 1024 * 1024;\n\nconst checkFileSize = file => file.size <= tenMbs;\n\nconst checkFilePath = file => file.name.indexOf('/') === 0;\n\nconst App = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchInput = _useState2[0],\n        setSearchInput = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        documents = _useState4[0],\n        setDocuments = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        uploadError = _useState6[0],\n        setUploadError = _useState6[1];\n\n  const totalSize = formatBytes(documents.reduce((total, doc) => total + doc.size, 0));\n  useEffect(() => {\n    fetch('http://localhost:8000/documents').then(response => response.json()).then(response => setDocuments(response.data));\n    return () => {};\n  }, []);\n\n  const onUploadChange = item => {\n    const formData = new FormData();\n    const files = item.current.files;\n    const checkAll = files.every(file => checkFileSize(file) && checkFilePath(file));\n\n    if (checkAll) {\n      for (let i = 0; i < files.length; i++) {\n        formData.append('file', files[i]);\n      }\n\n      fetch('http://localhost:8000/documents', {\n        method: 'POST',\n        body: formData\n      }).then(response => response.json()).then(response => {\n        const newDocuments = documents.concat(response.data);\n        setDocuments(newDocuments);\n      });\n    } else {\n      setUploadError('One or more files is in an incorrect format');\n    }\n  };\n\n  const onSearchChange = e => {\n    const value = e.target.value;\n    setSearchInput(value);\n    fetch(\"http://localhost:8000/documents?filename=\".concat(value)).then(response => response.json()).then(response => setDocuments(response.data));\n  };\n\n  const onDeleteClick = id => {\n    fetch(\"http://localhost:8000/documents/\".concat(id), {\n      method: 'DELETE'\n    }).then(response => response.json()).then(() => {\n      const newDocuments = documents.filter(doc => doc.id !== id);\n      setDocuments(newDocuments);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"mx-auto\",\n    style: {\n      maxWidth: 960\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"mx-4 md:mx-0 my-8 flex md:flex-row flex-col-reverse items-center justify-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(SearchInput, {\n    value: searchInput,\n    onChange: onSearchChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(UploadButton, {\n    onChange: onUploadChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Upload\"), uploadError && React.createElement(\"div\", {\n    className: \"mt-2 text-red-500\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, uploadError)), React.createElement(\"main\", {\n    className: \"m-4 md:mx-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex flex-wrap items-baseline justify-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"w-full md:w-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, documents.length, \" Documents\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Total size: \", totalSize)), React.createElement(\"div\", {\n    className: \"flex flex-wrap -mx-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, documents.map(doc => React.createElement(\"div\", {\n    key: doc.id,\n    className: \"w-full md:w-1/3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(DocumentCard, {\n    name: doc.name,\n    size: formatBytes(doc.size),\n    onDelete: () => onDeleteClick(doc.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/mepps32/kraken-app/src/App.js"],"names":["React","useState","useEffect","SearchInput","UploadButton","DocumentCard","formatBytes","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","tenMbs","checkFileSize","file","size","checkFilePath","name","indexOf","App","searchInput","setSearchInput","documents","setDocuments","uploadError","setUploadError","totalSize","reduce","total","doc","fetch","then","response","json","data","onUploadChange","item","formData","FormData","files","current","checkAll","every","length","append","method","body","newDocuments","concat","onSearchChange","e","value","target","onDeleteClick","id","filter","maxWidth","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { SearchInput, UploadButton, DocumentCard } from './components';\n\nconst formatBytes = (bytes, decimals = 2) => {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['bytes', 'kb', 'mb'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + sizes[i];\n};\n\nconst tenMbs = 10 * 1024 * 1024;\n\nconst checkFileSize = file => file.size <= tenMbs;\n\nconst checkFilePath = file => file.name.indexOf('/') === 0;\n\nconst App = () => {\n  const [searchInput, setSearchInput] = useState('');\n  const [documents, setDocuments] = useState([]);\n  const [uploadError, setUploadError] = useState('');\n  const totalSize = formatBytes(documents.reduce(\n    (total, doc) => total + doc.size,\n    0\n  ));\n\n  useEffect(() => {\n    fetch('http://localhost:8000/documents')\n      .then(response => response.json())\n      .then(response => setDocuments(response.data));\n    return () => {}; \n  }, []);\n\n  const onUploadChange = item => {\n    const formData = new FormData();\n    const { files } = item.current;\n    const checkAll = files.every(file => checkFileSize(file) && checkFilePath(file));\n    if (checkAll) {\n      for (let i = 0; i < files.length; i++) {\n        formData.append('file', files[i]);\n      }\n      fetch('http://localhost:8000/documents', { method: 'POST', body: formData })\n        .then(response => response.json())\n        .then(response => {\n          const newDocuments = documents.concat(response.data);\n          setDocuments(newDocuments);\n        });\n    } else {\n      setUploadError('One or more files is in an incorrect format');\n    }\n  };\n\n  const onSearchChange = e => {\n    const { value } = e.target;\n    setSearchInput(value);\n    fetch(`http://localhost:8000/documents?filename=${value}`)\n      .then(response => response.json())\n      .then(response => setDocuments(response.data));\n  };\n\n  const onDeleteClick = id => {\n    fetch(`http://localhost:8000/documents/${id}`, { method: 'DELETE' })\n      .then(response => response.json())\n      .then(() => {\n        const newDocuments = documents.filter(doc => doc.id !== id);\n        setDocuments(newDocuments);\n      });\n  };\n\n  return (\n    <div className=\"mx-auto\" style={{ maxWidth: 960 }}>\n      <header className=\"mx-4 md:mx-0 my-8 flex md:flex-row flex-col-reverse items-center justify-between\">\n        <SearchInput\n          value={searchInput}\n          onChange={onSearchChange}\n        />\n        <UploadButton onChange={onUploadChange}>Upload</UploadButton>\n        {uploadError && (<div className=\"mt-2 text-red-500\">{uploadError}</div>)}\n      </header>\n      <main className=\"m-4 md:mx-0\">\n        <div className=\"flex flex-wrap items-baseline justify-between\">\n          <h2 className=\"w-full md:w-auto\">{documents.length} Documents</h2>\n          <div>Total size: {totalSize}</div>\n        </div>\n        <div className=\"flex flex-wrap -mx-4\">\n          {documents.map(doc => (\n            <div key={doc.id} className=\"w-full md:w-1/3\">\n              <DocumentCard\n                name={doc.name}\n                size={formatBytes(doc.size)}\n                onDelete={() => onDeleteClick(doc.id)}\n              />\n            </div>\n          ))}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}