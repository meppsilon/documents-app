{"ast":null,"code":"import _slicedToArray from \"/Users/mepps32/kraken-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mepps32/kraken-app/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { SearchInput, UploadButton, DocumentCard } from './components';\n\nconst formatBytes = (bytes, decimals = 2) => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['bytes', 'kb', 'mb'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + sizes[i];\n};\n\nconst App = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchInput = _useState2[0],\n        setSearchInput = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        documents = _useState4[0],\n        setDocuments = _useState4[1];\n\n  const totalSize = formatBytes(documents.reduce((total, doc) => total + doc.size, 0));\n  useEffect(() => {\n    fetch('http://localhost:8000/documents').then(response => response.json()).then(response => setDocuments(response.data));\n    return () => {};\n  }, []);\n\n  const onUploadChange = item => {\n    const formData = new FormData();\n    const files = item.current.files;\n    console.log('files', files, files.length);\n\n    for (let i = 0; i < files.length; i++) {\n      formData.append('file', files[i]);\n    }\n\n    console.log('form data', formData);\n    fetch('http://localhost:8000/documents', {\n      method: 'POST',\n      body: formData\n    }).then(response => response.json()).then(response => console.log('response', response));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"mx-auto\",\n    style: {\n      maxWidth: 960\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"mx-4 md:mx-0 my-8 flex md:flex-row flex-col-reverse items-center justify-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(SearchInput, {\n    value: searchInput,\n    onChange: e => setSearchInput(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(UploadButton, {\n    onChange: onUploadChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Upload\")), React.createElement(\"main\", {\n    className: \"m-4 md:mx-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex flex-wrap items-baseline justify-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"w-full md:w-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, documents.length, \" Documents\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Total size: \", totalSize)), React.createElement(\"div\", {\n    className: \"flex flex-wrap -mx-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, documents.map(doc => React.createElement(\"div\", {\n    key: doc.name,\n    className: \"w-full md:w-1/3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(DocumentCard, {\n    name: doc.name,\n    size: formatBytes(doc.size),\n    onDelete: () => console.log('delete', doc.name),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/mepps32/kraken-app/src/App.js"],"names":["React","useState","useEffect","SearchInput","UploadButton","DocumentCard","formatBytes","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","App","searchInput","setSearchInput","documents","setDocuments","totalSize","reduce","total","doc","size","fetch","then","response","json","data","onUploadChange","item","formData","FormData","files","current","console","length","append","method","body","maxWidth","e","target","value","map","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { SearchInput, UploadButton, DocumentCard } from './components';\n\nconst formatBytes = (bytes, decimals = 2) => {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['bytes', 'kb', 'mb'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + sizes[i];\n};\n\nconst App = () => {\n  const [searchInput, setSearchInput] = useState('');\n  const [documents, setDocuments] = useState([]);\n  const totalSize = formatBytes(documents.reduce(\n    (total, doc) => total + doc.size,\n    0\n  ));\n\n  useEffect(() => {\n    fetch('http://localhost:8000/documents')\n      .then(response => response.json())\n      .then(response => setDocuments(response.data));\n    return () => {}; \n  }, []);\n\n  const onUploadChange = item => {\n    const formData = new FormData();\n    const { files } = item.current;\n    console.log('files', files, files.length);\n    for (let i = 0; i < files.length; i++) {\n      formData.append('file', files[i]);\n    }\n    console.log('form data', formData);\n    fetch('http://localhost:8000/documents', { method: 'POST', body: formData })\n      .then(response => response.json())\n      .then(response => console.log('response', response));\n  };\n\n  return (\n    <div className=\"mx-auto\" style={{ maxWidth: 960 }}>\n      <header className=\"mx-4 md:mx-0 my-8 flex md:flex-row flex-col-reverse items-center justify-between\">\n        <SearchInput\n          value={searchInput}\n          onChange={e => setSearchInput(e.target.value)}\n        />\n        <UploadButton onChange={onUploadChange}>Upload</UploadButton>\n      </header>\n      <main className=\"m-4 md:mx-0\">\n        <div className=\"flex flex-wrap items-baseline justify-between\">\n          <h2 className=\"w-full md:w-auto\">{documents.length} Documents</h2>\n          <div>Total size: {totalSize}</div>\n        </div>\n        <div className=\"flex flex-wrap -mx-4\">\n          {documents.map(doc => (\n            <div key={doc.name} className=\"w-full md:w-1/3\">\n              <DocumentCard\n                name={doc.name}\n                size={formatBytes(doc.size)}\n                onDelete={() => console.log('delete', doc.name)}\n              />\n            </div>\n          ))}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}